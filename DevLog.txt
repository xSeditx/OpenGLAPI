DEVLOG
OPENGL 2.0 Abstraction API


                                                           January 24 2018
                                                          -----------------

Created a Window class and populated it using Callback functions with various data such as keyboard input, mouse buttons, error handlers and
things of that nature. The Global Active Window is stored in GLFWWindow *SCREEN variable which is contained in a global state and points to the 
Current target of the API functions. A window is contructed with the Window Constructor Window(x,y, width, height, "Title") at which point 
the constructor creates the window and then assigns the newly constructed object to SCREEN so that it becomes the target of all the 
Window API seen here.

______________________________________________________________________________________________________________________________________________________

       Current Data Handled and Functions created these are contained under Private in the Window class and used to 
	   populate the class with useful data about the current state of the window.
______________________________________________________________________________________________________________________________________________________
 
                     CallBacks
				  --------------
voidError_callback         (int error, const char* description)
void Resize_Callback       (GLFWwindow *HAND,int w,int h)
void Window_close_callback (GLFWwindow* window)
void KeyBoard_Callback     (GLFWwindow *window, int key, int scancode, int action, int mods);
void Mouse_Callback        (GLFWwindow *window, int button, int action, int mod);


                     Methods
                -------------------
          void SYNC      (unsigned short rate)
unsigned short SYNC_RATE 
          void DESTROY  
______________________________________________________________________________________________________________________________________________________

                         EXTERNAL API FOR WINDOW, GRAPHICS, and APPLICATION MANAGEMENT
______________________________________________________________________________________________________________________________________________________

bool Set_Window_Focus  (Window *);
void SYNC
void CLS       
bool GAME_LOOP


**FIXED** Enumerated Mousebutton was done away with and a state Array created instead. Works perfectly so now Keyboard and Mouse input is perfectly managed
Something is wrong with the Mouse.SHOW command and I have to click both buttons to trigger the RIGHT button to show true.

======================================================================================================================================================
______________________________________________________________________________________________________________________________________________________
1/27:        Getting a MISSING GL VERSION ERROR FROM GLEW
______________________________________________________________________________________________________________________________________________________
Solution seems to be at: https://www.opengl.org/discussion_boards/showthread.php/163694-glew-Missing-GL-Version-error
Re: glew Missing GL Version error
I managed to find the reason for the problem. A wxGLContext doesn't automatically create an OpenGL context when it is created itself. 
First when the wxGLCanvas it is supposed to work with have been displayed and selected as the current canvas using SetCurrent(), the OpenGL 
context is created and then glewInit() can be called.
______________________________________________________________________________________________________________________________________________________




======================================================================================================================================================
______________________________________________________________________________________________________________________________________________________
1/28:        Getting a MISSING GL VERSION ERROR FROM GLEW
______________________________________________________________________________________________________________________________________________________

For my old Vertex and Matrix classes and implimented them as well as the starts of the simplistic shader class.

Window is crashing on exit due to issues with loading a framebuffer. Better reference and naming to the framebuffer is in order.

ADDED METHODS AND CLASSES
============================================================RENDERER.H===================================================================================
_______________________________________BUFFER CLASS _______________________________________________________________________________________________

Buffer(GLfloat *data,GLsizei count,GLint componentcount);
Bind()
Unbind()
__________________________________ INDEX BUFFER CLASS __________________________________________________________________________________________________

IndexBuffer(GLushort *data,GLsizei count): COUNT(count)
Bind()
Unbind()
__________________________________ VERTEX BUFFER CLASS __________________________________________________________________________________________________

Addbuffer (Buffer *buffer, GLuint index)
Bind()
Unbind()
___________________________________ RENDERER CLASS __________________________________________________________________________________________________

Renderer::Push(Matrix4 mat4)
Renderer::Pop()



======================================================================================================================================================
______________________________________________________________________________________________________________________________________________________
1/30:        Getting a MISSING GL VERSION ERROR FROM GLEW
______________________________________________________________________________________________________________________________________________________

Not Much of anything has been dont as I have hit a stagnent area in which everything I know about OpenGL is no longer applicable due to the fact that my 
graphics card does not support modern opengl. I need to reconsider the entire structure of this framework now and decide exactly how I am going to proceed from here

I will possibly mimic VAO however there use will not be as efficient since it will be cpu side indexing. I know of no current work around to effectively 
simulate the VAO.




======================================================================================================================================================
______________________________________________________________________________________________________________________________________________________
3/26:        Getting a MISSING GL VERSION ERROR FROM GLEW
______________________________________________________________________________________________________________________________________________________

FIXED: The Keyboard callback was not assigning the values to key or any of its structure elements other then the Keys[] Array which tells a keystate 
Now if a button is pressed its value is stored in the Key variable in the KEY_BOARD structure;

Torus class added to 3D primative cpp however madification need to be made as it was just a test of the Torus algorithm itself and generated a Displaylist


======================================================================================================================================================
______________________________________________________________________________________________________________________________________________________
3/27:        FUSTRUM ISSUES FIXED
______________________________________________________________________________________________________________________________________________________

The camera can now be moved up and down with the mouse and the forward and backwards keys move the World around it.
This is not accurate or currently correct however it is now possible to look around the world so I am not stuck aligning everything perfectly into 
Normalized space


======================================================================================================================================================
______________________________________________________________________________________________________________________________________________________
3/31:        MOUSE & KEY CONTROLLED CAMERA
______________________________________________________________________________________________________________________________________________________

 FINALLY some success setting up the Keyboard and Mouse to effect the Camera Position, There is still many issues with it, the rotation as wel as the
 Translation is off however it rotates and translates and I can finally see the world around me for what it is so I have gained my bearings in this 
 3D world.
 TODO: Fix RTS and the proceed to setup a sphere class. Once the Camera view is cleared up remove all unneeded garbage from the project;



======================================================================================================================================================
______________________________________________________________________________________________________________________________________________________
4/12:       VERTEX BUFFER OBJECT ADDED
______________________________________________________________________________________________________________________________________________________

- Ball class added in effort to change the Sphere class to render using VBO instead of Displaylist. *This was Successful*

-Vertex Buffer Object Replaced Displaylist as the main rendering method. 

-Updated Buffer class so that on creation Vertex and Color data is feed into it and it produces correct buffers needed for rendering

-Camera class perfected so now it always goes the direction one is facing

-Collision detection class added starting with Bounding Spheres

-Simple Lighting Added however there are some issues with this at the moment but it could either be a default shader issue or due to the way the
 world is currently translated